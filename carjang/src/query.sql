SELECT * FROM USER_TABLES;
SELECT * FROM USER_INDEXES;
SELECT * FROM RENTIT;
select * from DRIVER;
select * from car;

update DRIVER set DRV_MARK = 53 where DRV_ID = 'd@d.com';
insert into CAR values('fdsa3','a@a.com','링컨');
select board_seq.nextval from dual;
DELETE from RENTIT;
to_date('09-09-2013 12:14:11','mm-dd-yyyy hh24:mi:ss')); 

select BOARD_NUM,BOARD_DRV_ID,BOARD_PRICE,BOARD_DATE_1,BOARD_DATE_2 
	   BOARD_LOC,BOARD_LIMIT,BOARD_PICK_CHK,BOARD_COMENT,BOARD_REG_DATE,BOARD_CAR,DRV_MARK 
from   RENTIT join DRIVER on RENTIT.BOARD_DRV_ID = DRIVER.DRV_ID 
where  
	   BOARD_LOC = ? AND BOARD_DATE_1 >= ?  
AND    BOARD_DATE_2 <= ? AND BOARD_PRICE BETWEEN ? AND ? 

select BOARD_NUM,BOARD_DRV_ID,BOARD_PRICE,BOARD_DATE_1,BOARD_DATE_2
	   BOARD_LOC,BOARD_LIMIT,BOARD_PICK_CHK,BOARD_COMENT,BOARD_REG_DATE,BOARD_CAR,DRV_MARK
from   RENTIT join DRIVER on RENTIT.BOARD_DRV_ID = DRIVER.DRV_ID 
where
	   BOARD_LOC = '광주' AND BOARD_DATE_1 >= to_date('2016-10-06 06:00','yyyy-mm-dd hh24:mi')
AND    BOARD_DATE_2 <= to_date('2016-10-10 17:00','yyyy-mm-dd hh24:mi') AND BOARD_PRICE BETWEEN 1000 AND 68000;
				

select
				 BOARD_NUM,BOARD_DRV_ID,BOARD_PRICE,BOARD_DATE_1,BOARD_DATE_2
				 BOARD_LOC,BOARD_LIMIT,BOARD_PICK_CHK,BOARD_COMENT,BOARD_REG_DATE,BOARD_CAR,DRV_MARK
				 from RENTIT join DRIVER on RENTIT.BOARD_DRV_ID = DRIVER.DRV_ID 
				 where  BOARD_LOC = ? AND BOARD_DATE_1 >= ?  AND BOARD_DATE_2 <= ? AND BOARD_PRICE BETWEEN ? AND ? 
















insert into RENTIT values (21,'a@a.com',6000,to_date('2016-10-09 12:00','yyyy-mm-dd hh24:mi'),to_date('2016-10-10 12:00','yyyy-mm-dd hh24:mi'),
'광주',3,1,'ㄹㅇㄴㅁㄹㄴㄹㅇㄴ',sysdate,'fdsa3');


insert into RENTIT values (2,'a@a.com',6000,to_date('10-09-2016','mm-dd-yyyy'),to_date('10-10-2016','mm-dd-yyyy'),
to_date('12:00','hh24:mi'),to_date('17:00','hh24:mi'),'광주',3,1,'ㄹㅇㄴㅁㄹㄴㄹㅇㄴ',sysdate,'fdsa3');


select * from RENTIT
where BOARD_LOC = '광주' AND BOARD_DATE_1 >= to_date('2016-10-06 06:00','yyyy-mm-dd hh24:mi')
AND BOARD_DATE_2 <= to_date('2016-10-10 17:00','yyyy-mm-dd hh24:mi') AND BOARD_PRICE BETWEEN 1000 AND 68000;


INSERT INTO TABLE1 (REG_DATE) VALUES ( TO_DATE('10-04-2010 20:37:50','MM-DD-YYYY HH24:MI:SS') )
DESC CAR;
/* 고객 */
DROP TABLE CUSTOMER 
	CASCADE CONSTRAINTS;

/* 탑승자 */
DROP TABLE PASSENGER 
	CASCADE CONSTRAINTS;

/* 운전자 */
DROP TABLE DRIVER 
	CASCADE CONSTRAINTS;

/* 게시판 */
DROP TABLE BOARD 
	CASCADE CONSTRAINTS;

/* 경매 */
DROP TABLE AUCTION 
	CASCADE CONSTRAINTS;

/* 쿠폰 */
DROP TABLE COUPON 
	CASCADE CONSTRAINTS;

/* 차 */
DROP TABLE CAR 
	CASCADE CONSTRAINTS;

/* 쿠폰 사용자 */
DROP TABLE COUPON_USER 
	CASCADE CONSTRAINTS;

/* 고객코드 */
DROP TABLE CUST_CODE 
	CASCADE CONSTRAINTS;
	
DELETE FROM RENTIT;

/* 고객 */
CREATE TABLE CUSTOMER (
	CUST_ID VARCHAR2(10) NOT NULL, /* 아이디 */
	CUST_NICK VARCHAR2(25) NOT NULL, /* 닉네임 */
	CUST_PW VARCHAR2(10) NOT NULL, /* 패스워드 */
	CUST_NAME VARCHAR2(50) NOT NULL, /* 이름 */
	CUST_AGE NUMBER NOT NULL, /* 나이 */
	CUST_GENDER CHARACTER(3) NOT NULL, /* 성별 */
	CUST_ADDR VARCHAR2(255) NOT NULL, /* 주소 */
	CUST_IDNUM NUMBER(13) NOT NULL, /* 주민등록번호 */
	CUST_COUNT NUMBER NOT NULL, /* 이용횟수 */
	CUST_MILEAGE NUMBER NOT NULL, /* 마일리지 */
	CUST_DATE DATE NOT NULL /* 가입일 */
);



/* UNIQUE */
ALTER TABLE CUSTOMER
	ADD
		CONSTRAINT UK_CUST_NICK
		UNIQUE(
			CUST_NICK
		);
		
ALTER TABLE RENTIT
DROP COLUMN BOARD_TIME_2;
ALTER TABLE RENTIT
	MODIFY BOARD_CAR varchar(15) NOT NULL;
	
	ALTER TABLE RENTIT 
	ADD constraint FK_BOARD_CAR
	FOREIGN KEY (BOARD_CAR) REFERENCES CAR(CAR_NUM) ON DELETE CASCADE;
	
	ALTER 
		
ALTER TABLE RENTIT DROP CONSTRAINT FK_BOARD_CAR CASCADE;		
ALTER TABLE CUST_CODE
	ADD
		CONSTRAINT UK_CUST_CODE_ID
		UNIQUE(
			CUST_ID
		);
		
ALTER TABLE DRIVER
	ADD
		CONSTRAINT UK_DRV_LISC
		UNIQUE(
			DRV_LISC
		);
/* SQ */
CREATE SEQUENCE  SQ_CUST_NUM 
START WITH 1   
INCREMENT BY 1 
MAXVALUE 99999999;
	
ALTER TABLE 테이블명 ADD CONSTRAINT uk_테이블명_컬럼명 UNIQUE(컬럼명)

INSERT INTO CUSTOMER VALUES('SSS','앙기모띠','a','김철수',32,'남','부산 광역시',9106291913221,0,0,sysdate);
INSERT INTO CUSTOMER VALUES('SS','앙기모띠','a','김철수',32,'남','부산 광역시',9106291913221,0,0,sysdate);
INSERT INTO CUSTOMER VALUES('SSS','앙기모띠','a','김철수',32,'남','부산 광역시',9106291913221,0,0,sysdate);
INSERT INTO DRIVER VALUES('SSS',34432424,3,0,0);

DELETE FROM CUSTOMER WHERE CUST_ID = 'SSS';
DELETE FROM CUST_CODE WHERE CUST_ID = 'SSS';
INSERT INTO CUST_CODE VALUES (SQ_CUST_NUM.NEXTVAL,'SSS');

	CUST_ID VARCHAR2(10) NOT NULL, /* 아이디 */
	DRV_LISC NUMBER(12) NOT NULL, /* 운전면허번호 */
	DRV_CAREER NUMBER NOT NULL, /* 경력 */
	DRV_MARK NUMBER, /* 별점 */
	DRV_AC_CHK CHAR /* 사고유무 */

SELECT * FROM CUST_CODE;
select * from CUSTOMER;
DELETE FROM CUSTOMER;

CREATE UNIQUE INDEX PK_CUSTOMER
	ON CUSTOMER (
		CUST_ID ASC
	);
	
CREATE UNIQUE INDEX PK_CUSTOMER
ON CUSTOMER (
	CUST_ID ASC
);


ALTER TABLE CUSTOMER
	ADD
		CONSTRAINT PK_CUSTOMER
		PRIMARY KEY (
			CUST_ID
		);
		
ALTER TABLE CUST_CODE 
	ADD constraint FK_ 
	FOREIGN KEY (대상필드) REFERENCES 부모테이블명(참조필드) ON DELETE CASCADE		
	

	
CREATE TABLE PASSENGER (
	CUST_ID VARCHAR2(10) NOT NULL /* 아이디 */
);

CREATE UNIQUE INDEX PK_PASSENGER
	ON PASSENGER (
		CUST_ID ASC
	);

ALTER TABLE PASSENGER
	ADD
		CONSTRAINT PK_PASSENGER
		PRIMARY KEY (
			CUST_ID
		);

/* 운전자 */
CREATE TABLE DRIVER (
	CUST_ID VARCHAR2(10) NOT NULL, /* 아이디 */
	DRV_LISC NUMBER(12) NOT NULL, /* 운전면허번호 */
	DRV_CAREER NUMBER NOT NULL, /* 경력 */
	DRV_MARK NUMBER, /* 별점 */
	DRV_AC_CHK CHAR /* 사고유무 */
);

CREATE UNIQUE INDEX PK_DRIVER
	ON DRIVER (
		CUST_ID ASC
	);

CREATE INDEX FK_CUSTOMER_TO_DRIVER
	ON DRIVER (
		CUST_ID ASC
	);


ALTER TABLE DRIVER
	ADD
		CONSTRAINT PK_DRIVER
		PRIMARY KEY (
			CUST_ID
		);
ALTER TABLE DRIVER
	ADD
		CONSTRAINT FK_DIRVER
		FOREIGN KEY (
			CUST_ID
		)
		REFERENCES CUSTOMER (
			CUST_ID
		)ON DELETE CASCADE;
	
ALTER TABLE DRIVER
DROP CONSTRAINT PK_DRIVER CASCADE;


/* 게시판 */
CREATE TABLE BOARD (
	BOARD_NUM NUMBER NOT NULL, /* 글번호 */
	CUST_ID VARCHAR2(10) NOT NULL, /* 아이디 */
	BOARD_TITLE VARCHAR(255) NOT NULL, /* 제목 */
	BOARD_DATE DATE NOT NULL, /* 날짜 */
	BOARD_LOC VARCHAR2(255) NOT NULL, /* 장소 */
	BOARD_LIMIT NUMBER NOT NULL, /* 인원제한 */
	BOARD_EXT_CHK CHAR NOT NULL, /* 연장가능 유무 */
	BOARD_PRF_AGE NUMBER, /* 선호 연령대 */
	BOARD_MOOD CHAR, /* 분위기 */
	BOARD_REG_DATE DATE NOT NULL /* 등록일 */
);

CREATE UNIQUE INDEX PK_BOARD
	ON BOARD (
		BOARD_NUM ASC
	);

ALTER TABLE BOARD
	ADD
		CONSTRAINT PK_BOARD
		PRIMARY KEY (
			BOARD_NUM
		);

/* 경매 */
CREATE TABLE AUCTION (
	BOARD_NUM NUMBER NOT NULL, /* 글번호 */
	AUC_NUM NUMBER NOT NULL, /* 경매번호 */
	AUC_REG VARCHAR2(25) NOT NULL, /* 등록자 */
	AUC_APPLICANT VARCHAR2(25) NOT NULL, /* 신청자 */
	AUC_PRICE NUMBER NOT NULL, /* 가격 */
	AUC_BIDDER VARCHAR2(25) NOT NULL, /* 입찰자 */
	AUC_DATE DATE NOT NULL /* 입찰날짜 */
);

CREATE UNIQUE INDEX PK_AUCTION
	ON AUCTION (
		BOARD_NUM ASC,
		AUC_NUM ASC
	);

ALTER TABLE AUCTION
	ADD
		CONSTRAINT PK_AUCTION
		PRIMARY KEY (
			BOARD_NUM,
			AUC_NUM
		)ON DELETE CASCADE;
ALTER TABLE AUCTION
	DROP CONSTRAINT PK_AUCTION ;	

/* 쿠폰 */
CREATE TABLE COUPON (
	COUPON_TYPE CHARACTER(20) NOT NULL, /* 쿠폰유형 */
	COUPON_NUM VARCHAR2(30) NOT NULL, /* 쿠폰번호 */
	COUPON_CONTENT VARCHAR2(255) NOT NULL, /* 쿠폰내용 */
	COUPON_DATE DATE NOT NULL /* 유효기간 */
);

CREATE UNIQUE INDEX PK_COUPON
	ON COUPON (
		COUPON_TYPE ASC,
		COUPON_NUM ASC
	);

ALTER TABLE COUPON
	ADD
		CONSTRAINT PK_COUPON
		PRIMARY KEY (
			COUPON_TYPE,
			COUPON_NUM
		);

/* 차 */
CREATE TABLE CAR (
	CAR_NUM VARCHAR(7) NOT NULL, /* 차번호 */
	CUST_ID VARCHAR2(10) NOT NULL, /* 아이디 */
	CAR_KIND VARCHAR2(30) NOT NULL /* 차종류 */
);

CREATE UNIQUE INDEX PK_CAR
	ON CAR (
		CAR_NUM ASC
	);

ALTER TABLE CAR
	ADD
		CONSTRAINT PK_CAR
		PRIMARY KEY (
			CAR_NUM
		);

/* 쿠폰 사용자 */
CREATE TABLE COUPON_USER (
	NUM NUMBER NOT NULL, /* 순번 */
	COUPON_TYPE CHARACTER(20) NOT NULL, /* 쿠폰유형 */
	COUPON_NUM VARCHAR2(30) NOT NULL, /* 쿠폰번호 */
	CUST_ID VARCHAR2(10) NOT NULL /* 아이디 */
);

CREATE UNIQUE INDEX PK_COUPON_USER
	ON COUPON_USER (
		NUM ASC
	);

ALTER TABLE COUPON_USER
	ADD
		CONSTRAINT PK_COUPON_USER
		PRIMARY KEY (
			NUM
		);

/* 고객코드 */
CREATE TABLE CUST_CODE (
	CUST_NUM NUMBER NOT NULL, /* 고객번호 */
	CUST_ID VARCHAR2(10) NOT NULL /* 아이디 */
);

CREATE UNIQUE INDEX PK_CUST_CODE
	ON CUST_CODE (
		CUST_NUM ASC
	);

ALTER TABLE CUST_CODE
	ADD
		CONSTRAINT PK_CUST_CODE
		PRIMARY KEY (
			CUST_NUM
		);

ALTER TABLE PASSENGER
	ADD
		CONSTRAINT FK_CUSTOMER_TO_PASSENGER
		FOREIGN KEY (
			CUST_ID
		)
		REFERENCES CUSTOMER (
			CUST_ID
		);

ALTER TABLE DRIVER
	ADD
		CONSTRAINT FK_CUSTOMER_TO_DRIVER
		FOREIGN KEY (
			CUST_ID
		)
		REFERENCES CUSTOMER (
			CUST_ID
		);

ALTER TABLE BOARD
	ADD
		CONSTRAINT FK_DRIVER_TO_BOARD
		FOREIGN KEY (
			CUST_ID
		)
		REFERENCES DRIVER (
			CUST_ID
		);

ALTER TABLE BOARD
	ADD
		CONSTRAINT FK_PASSENGER_TO_BOARD
		FOREIGN KEY (
			CUST_ID
		)
		REFERENCES PASSENGER (
			CUST_ID
		);

ALTER TABLE AUCTION
	ADD
		CONSTRAINT FK_BOARD_TO_AUCTION
		FOREIGN KEY (
			BOARD_NUM
		)
		REFERENCES BOARD (
			BOARD_NUM
		);

ALTER TABLE CAR
	ADD
		CONSTRAINT FK_DRIVER_TO_CAR
		FOREIGN KEY (
			CUST_ID
		)
		REFERENCES DRIVER (
			CUST_ID
		);

ALTER TABLE COUPON_USER
	ADD
		CONSTRAINT FK_PASSENGER_TO_COUPON_USER
		FOREIGN KEY (
			CUST_ID
		)
		REFERENCES PASSENGER (
			CUST_ID
		);

ALTER TABLE COUPON_USER
	ADD
		CONSTRAINT FK_COUPON_TO_COUPON_USER
		FOREIGN KEY (
			COUPON_TYPE,
			COUPON_NUM
		)
		REFERENCES COUPON (
			COUPON_TYPE,
			COUPON_NUM
		);

ALTER TABLE CUST_CODE
	ADD
		CONSTRAINT FK_CUSTOMER_TO_CUST_CODE
		FOREIGN KEY (
			CUST_ID
		)
		REFERENCES CUSTOMER (
			CUST_ID
		)ON DELETE CASCADE;

		
		